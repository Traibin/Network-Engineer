HDLC协议
数据链路控制协议分为两大类：面向字符的协议和面向位的协议
HDLC是一种面向位（比特）的同步链路控制协议
HDLC的基本配置
定义了3种类型的站、2种链路配置和3种数据传输方式
3种类型的站
（1）主站：对链路进行控制，主站发出的帧叫命令帧
（2）从站：在主站的控制下进行操作，从站发出的帧叫响应帧
（3）复合站：具有主站和从站的双重功能，复合站既可以发送命令也可以发出响应帧
2路链路配置
（1）不平衡配置：适用于点对点和点对多点链路，这种链路由一个主站和一个或多个从站组成，支持全双工和半双工传输
（2）平衡配置：仅用于点对点链路，这种配置由两个复合站组成，支持全双工和半双工传输
3种数据传输
（1）正常响应方式（NRM），适用于不平衡配置，只有主站能启动数据传输过程，从站收到主站的询问命令时才能发送数据
（2）异步平衡方式（ABM），适用于平衡配置，任何一个复合站都无须取得另一个复合站的允许就可以启动数据传输过程
（3）异步响应方式（ARM），适用于不平衡配置，从站无须取得主站的明确指示就可以启动数据传输，主站的责任只是对线路进行管理
HDLC帧结构
通常使用CRC-16、CRC-32校验，帧边界为“01111110”
名称		帧头		地址		控制		数据		校验		帧尾
比特		8		8		8		可变长	16或32	8
结构		F		A		C		INFO	FCS		F
（1）帧标志F。HDLC用一种特殊的位模式01111110作为帧边界的标志。
由于帧中间出现位模式01111110时也会被当作标志，从而破坏了帧的同步，所以要使用位的填充技术。发送站的数据位序列中一旦
发现0后有5个“1”，则在第七位插入一个“0”，这样就保证了传输的数据中不会出现帧相同的位模式。接收站则进行相反的操作：在接受的位序列中如果发现0后有5个“1”，则检查第七位，若第七位为0则删除，若第七位是1且第八位为0，则认为是帧结尾的标志。若第七位和第八位都是1，则认为是发送站的停止信号。
（2）地址字段A。地址字段用于标识从站的地址，用在点对多点链路中，地址通常是8位长，然而经过协商之后，可以采用更长的扩展地址。每一个8位组的最低位表示该8位组是否是地址字段的结局：若为1，表示是最后的8位组：若为0，则不是。所有的8位组的其余7位组成了整个扩展地址字段。全为1的8位组（11111111）表示广播地址
（3）控制字段C。HDLC定义3种帧，可根据控制字段的格式区分。信息帧（I帧）承载着要传送的数据，此外还捎带着流量控制和差错控制的应答信号。管理帧（S帧）用于提供ARQ控制信息，当不使用捎带机制时要用管理帧控制传输过程。无编号帧提供建立、释放等链路控制功能，以及少量信息的无连接传输过程。
（4）信息字段（INFO）只有I帧和某些无编号帧含有信息字段。
（5）帧校验序列FCS。FCS中含有各个字段的校验（标志字段除外）。通常使用CRC-CCITT标准产生16位校验序列，有时也使用CRC-32产生32位校验序列
HDLC帧格式及控制字段
标志	1字节	1字节	1字节		≥0字节		2字节	标志1字节
01111110	地址		控制字段		DATA		FCS		01111110
控制字段
I帧：信息帧		0	|		N(S)		|	P/F  |    N(R)
S帧：监控帧		1     	|	   0	|        S	|	P/F  |    N(R)
U帧：无编号帧	1	|	   1	|       M	|	P/F  |      M
比特序号			1	|	   2	|     3    4	|	5     	|  6  7   8
信息帧（I帧）：第一位为0.用于承载数据和控制，N（S）表示发送帧序号，N（R）表示下一个预期要接收帧的序号，N（R）=5，表示下一个接收5号帧。N（S）和N（R）均为3位二进制编码，可取值为0~7
监控帧（S帧）：前两位为10，监控帧用于差错控制和流量控制。S帧控制字段的第三、第四位为S帧类型编码，共有四种不同的编码
S帧类型的编码意义
记忆符	名称				S字段		功能
RR		接收准备好		0	0		确认，且准备好接收下一帧，已收妥N（R）之前的各帧
RNR		接收未准备好		1	0		确认，暂停接收下一帧，N（R）含义同上
REJ		拒绝接收			0	1		否认，否认N（R）起的各帧，但N（R）以前的帧已收妥
SREJ		选择拒绝接收		1	1		否认，只否认序号为N（R）的帧
无编号帧（U帧）：控制字段中不包含编号为N（S）和N（R），U帧用于提供对链路的建立、拆除以及多种控制功能。当要求提供不可靠的无连接服务时，它也可以承载数据。
设置数据传输方式的命令帧和响应帧
传输信息的命令和响应帧
用于链路恢复的命令和响应帧
其他命令和响应帧

